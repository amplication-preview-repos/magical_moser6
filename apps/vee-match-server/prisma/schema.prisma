datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserAnswer {
  answerChoice   AnswerChoice? @relation(fields: [answerChoiceId], references: [id])
  answerChoiceId String?
  createdAt      DateTime      @default(now())
  id             String        @id @default(cuid())
  question       Question?     @relation(fields: [questionId], references: [id])
  questionId     String?
  updatedAt      DateTime      @updatedAt
  user           User?         @relation(fields: [userId], references: [id])
  userId         String?
}

model AnswerChoice {
  createdAt   DateTime     @default(now())
  id          String       @id @default(cuid())
  question    Question?    @relation(fields: [questionId], references: [id])
  questionId  String?
  text        String?
  updatedAt   DateTime     @updatedAt
  userAnswers UserAnswer[]
}

model Question {
  answerChoices AnswerChoice[]
  createdAt     DateTime       @default(now())
  id            String         @id @default(cuid())
  text          String?
  updatedAt     DateTime       @updatedAt
  userAnswers   UserAnswer[]
}

model Match {
  chats      Chat[]
  createdAt  DateTime @default(now())
  id         String   @id @default(cuid())
  matchScore Int?
  updatedAt  DateTime @updatedAt
  user1      String?
  user2      String?
}

model User {
  createdAt   DateTime     @default(now())
  dateOfBirth DateTime?
  email       String?      @unique
  firstName   String?
  gender      String?
  id          String       @id @default(cuid())
  lastName    String?
  password    String
  profilePics Json?
  roles       Json
  updatedAt   DateTime     @updatedAt
  userAnswers UserAnswer[]
  username    String       @unique
}

model Message {
  chat      Chat?    @relation(fields: [chatId], references: [id])
  chatId    String?
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  sender    String?
  updatedAt DateTime @updatedAt
}

model Chat {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  match     Match?    @relation(fields: [matchId], references: [id])
  matchId   String?
  messages  Message[]
  updatedAt DateTime  @updatedAt
}
